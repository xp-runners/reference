name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Determine version
      run: sh .github/workflows/version.sh

    - name: Set up Mono
      run: sudo apt-get -y install fakeroot mono-runtime mono-mcs libmono-system-runtime-serialization4.0-cil libmono-system-componentmodel-composition4.0-cil libmono-microsoft-build-utilities-v4.0-4.0-cil libmono-windowsbase4.0-cil libmono-system-net4.0-cil libmono-system-net-http-formatting4.0-cil libmono-system-net-http-webrequest4.0-cil libmono-system-net-http4.0-cil libmono-system-io-compression4.0-cil libmono-system-data-services-client4.0-cil libmono-system-servicemodel4.0a-cil 

    - name: Set up NuGet
      uses: nuget/setup-nuget@v2

    - name: Install XUnit
      run: |
        nuget install xunit -Version 1.9.2 -OutputDirectory testrunner
        nuget install xunit.runners -Version 1.9.2 -OutputDirectory testrunner
        nuget install xunit.extensions -Version 1.9.2 -OutputDirectory testrunner

    - name: Run test suite
      run: |
        mcs --version
        cp testrunner/xunit.1.9.2/lib/net20/xunit.dll .
        cp testrunner/xunit.extensions.1.9.2/lib/net20/xunit.extensions.dll .
        mcs src/xp.runner/TPut.cs src/xp.runner/AssemblyInfo.cs -target:exe -main:Xp.Runners.TPut -out:tput.exe
        mcs -r:System.Runtime.Serialization.dll src/xp.runner/*.cs src/xp.runner/*/*.cs -target:exe -main:Xp.Runners.Xar -out:xar.exe
        mcs -r:System.Runtime.Serialization.dll src/xp.runner/*.cs src/xp.runner/*/*.cs -target:exe -main:Xp.Runners.Xp -out:xp.exe
        mcs -r:System.Runtime.Serialization.dll -r:xunit.dll -r:xunit.extensions.dll src/xp.runner/*.cs src/xp.runner/*/*.cs src/xp.runner.test/*.cs -target:library -out:tests.dll
        mono ./testrunner/xunit.runners.1.9.2/tools/xunit.console.clr4.exe tests.dll
        mono ./xp.exe list

    - name: Bundle entrypoint
      run: sh .github/workflows/bundle.sh

    - name: Create downloads
      run: sh .github/workflows/downloads.sh target/

    - name: Create release-version
      run: gh release upload ${{ env.release-version }} target/* --clobber
      shell: bash
      env:
        GH_TOKEN: ${{ github.token }}
